package ca.csf.mobile2.tp2.question

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import ca.csf.mobile2.tp2.R
import ca.csf.mobile2.tp2.databinding.ActivityCreateQuestionBinding
import ca.csf.mobile2.tp2.question.viewModels.CreateQuestionActivityViewModel
import com.google.android.material.snackbar.Snackbar
import kotlinx.android.synthetic.main.activity_create_question.*
import org.androidannotations.annotations.*

@SuppressLint("Registered") //Reason : Generated by Android Annotations
@DataBound
@EActivity(R.layout.activity_create_question)
class CreateQuestionActivity : AppCompatActivity() {

    @BindingObject
    protected lateinit var binding: ActivityCreateQuestionBinding

    @InstanceState
    protected lateinit var viewModel: CreateQuestionActivityViewModel

    @InstanceState
    protected lateinit var questionData: QuestionData

    @Bean
    protected lateinit var questionService: QuestionService

    @AfterViews
    protected fun onCreate() {
        if (!this::viewModel.isInitialized) {
            questionData = QuestionData()
            questionData.text = getString(R.string.text_initial_question)
            viewModel = CreateQuestionActivityViewModel(questionData)
        }
        questionData = viewModel.questionData
        binding.viewModel = viewModel
    }

    @Click(R.id.createButton)
    protected fun createQuestion() {
        if (!checkIfFieldsNotEmpty()) {
            questionService.createQuestion(
                questionData,
                this::onSuccess,
                this::onServerError,
                this::onConnectivityError
            )
            viewModel.isLoading = true
        } else {
            onFieldsEmptyError()
        }
    }

    //BC : Validation devrait se faire dans la couche model.
    private fun checkIfFieldsNotEmpty(): Boolean {
        return viewModel.questionText.isEmpty() ||
                viewModel.choice1Text.isEmpty() ||
                viewModel.choice2Text.isEmpty()
    }

    private fun onSuccess(question: QuestionData) {
        val questionIntent = Intent().putExtra(EXTRA_NAME, question.id)
        setResult(Activity.RESULT_OK, questionIntent)
        finish()
    }

    private fun onFieldsEmptyError(){
        Snackbar.make(rootView, R.string.text_error_fill_field, Snackbar.LENGTH_LONG).show()
    }

    private fun onServerError() {
        Snackbar.make(rootView, R.string.text_error_server, Snackbar.LENGTH_LONG).show()
    }

    private fun onConnectivityError() {
        Snackbar.make(rootView, R.string.text_error_internet, Snackbar.LENGTH_LONG).show()
    }

}

private const val EXTRA_NAME = "QUESTION"
