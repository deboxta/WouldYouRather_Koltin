package ca.csf.mobile2.tp2.question

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import ca.csf.mobile2.tp2.R
import org.androidannotations.annotations.*
import ca.csf.mobile2.tp2.databinding.ActivityCreateQuestionBinding
import ca.csf.mobile2.tp2.question.viewModels.CreateQuestionActivityViewModel

@SuppressLint("Registered") //Reason : Generated by Android Annotations
@DataBound
@EActivity(R.layout.activity_create_question)
class CreateQuestionActivity : AppCompatActivity() {

    @BindingObject
    protected lateinit var binding: ActivityCreateQuestionBinding

    @InstanceState
    protected lateinit var viewModel: CreateQuestionActivityViewModel
    private lateinit var questionData: QuestionData

    @Bean
    protected lateinit var questionService: QuestionService

    @AfterViews
    protected fun onCreate() {
        if (!this::viewModel.isInitialized) {
            questionData = QuestionData()
            viewModel =
                CreateQuestionActivityViewModel(
                    questionData
                )
        }
        questionData = viewModel.questionData
        binding.viewModel = viewModel
    }

    @Click(R.id.createButton)
    protected fun createQuestion() {
        questionService.createQuestion(
            questionData,
            this::onSuccess,
            this::onServerError,
            this::onConnectivityError
        )
    }

    private fun onSuccess(question: QuestionData) {
        val questionIntent = Intent().putExtra(EXTRA_NAME, question.id)
        setResult(Activity.RESULT_OK, questionIntent)
        finish()
    }

    private fun onServerError() {
        val questionIntent = Intent().putExtra(EXTRA_ON_SERVER_ERROR, true)
        setResult(Activity.RESULT_CANCELED, questionIntent)
        finish()
    }

    private fun onConnectivityError() {
        val questionIntent = Intent().putExtra(EXTRA_ON_CONNECTIVITY_ERROR, true)
        setResult(Activity.RESULT_CANCELED, questionIntent)
        finish()
    }

}
private const val EXTRA_NAME = "QUESTION"
private const val EXTRA_ON_SERVER_ERROR = "SERVER_ERROR"
private const val EXTRA_ON_CONNECTIVITY_ERROR = "CONNECTIVITY_ERROR"
